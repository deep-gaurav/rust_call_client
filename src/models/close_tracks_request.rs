/*
 * Cloudflare Calls API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CloseTracksRequest {
    #[serde(rename = "sessionDescription", skip_serializing_if = "Option::is_none")]
    pub session_description: Option<Box<models::SessionDescription>>,
    #[serde(rename = "tracks", skip_serializing_if = "Option::is_none")]
    pub tracks: Option<Vec<models::CloseTrackObject>>,
    /// True if you want to stop just the data flow for the tracks, no WebRTC renegotiation
    #[serde(rename = "force", skip_serializing_if = "Option::is_none")]
    pub force: Option<bool>,
}

impl CloseTracksRequest {
    pub fn new() -> CloseTracksRequest {
        CloseTracksRequest {
            session_description: None,
            tracks: None,
            force: None,
        }
    }
}

